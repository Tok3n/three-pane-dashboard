// Generated by CoffeeScript 1.7.1
(function() {
  var buildDashboard, checkReady, key, path, saveTemplate, _fn;

  window.templatePaths = {
    nav: "./templates/nav-pane.html",
    collection: "./templates/collection-pane.html",
    model: "./templates/model-pane.html"
  };

  window.panes = (function() {
    return {
      nav: $(".nav-pane"),
      collection: $(".collection-pane"),
      model: $(".model-pane")
    };
  })();

  window.userData = void 0;

  window.templates = {};

  $.getJSON("./data.json").done(function(json) {
    window.userData = json;
    return checkReady();
  }).fail(function(jqxhr, textStatus, error) {
    var err;
    err = textStatus + ", " + error;
    return console.log("Request Failed: " + err);
  });

  _fn = function(key, path) {
    return $.get(path, function(template) {
      templates[key] = Handlebars.compile(template);
      saveTemplate(key, template);
      return checkReady();
    });
  };
  for (key in templatePaths) {
    path = templatePaths[key];
    _fn(key, path);
  }

  checkReady = function() {
    if (Object.keys(templates).length === Object.keys(templatePaths).length) {
      if (userData) {
        return buildDashboard();
      }
    }
  };

  saveTemplate = function(name, contents) {
    if (!localStorage.getItem(name)) {
      return localStorage.setItem(name, contents);
    }
  };

  buildDashboard = function() {
    var category, model, _i, _j, _k, _l, _len, _len1, _len2, _len3, _ref, _ref1, _ref2, _ref3;
    _ref = userData.categories;
    for (_i = 0, _len = _ref.length; _i < _len; _i++) {
      category = _ref[_i];
      category.id = _.uniqueId("collection-");
      _ref1 = category.models;
      for (_j = 0, _len1 = _ref1.length; _j < _len1; _j++) {
        model = _ref1[_j];
        model.id = _.uniqueId("model-");
      }
    }
    panes.nav.html(templates.nav(userData));
    _ref2 = userData.categories;
    for (_k = 0, _len2 = _ref2.length; _k < _len2; _k++) {
      category = _ref2[_k];
      panes.collection.append(templates.collection(category));
      _ref3 = category.models;
      for (_l = 0, _len3 = _ref3.length; _l < _len3; _l++) {
        model = _ref3[_l];
        panes.model.append(templates.model(model));
      }
    }
    $("a[data-link-target]").click(function() {
      var target, targetId, type;
      targetId = $(this).attr("data-link-target");
      type = targetId.split("-")[0];
      console.log(type);
      target = $("#" + targetId);
      if (type === "collection") {
        $(".collection-pane__single").removeClass("active");
      }
      $(".model-pane__single").removeClass("active");
      return target.addClass("active");
    });
  };

}).call(this);
